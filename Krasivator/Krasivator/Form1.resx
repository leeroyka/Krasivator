<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>